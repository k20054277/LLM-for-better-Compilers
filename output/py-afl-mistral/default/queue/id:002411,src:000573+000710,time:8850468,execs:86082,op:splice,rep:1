
def divide(x, y):
    """This function takes two arguments x and y, and returns the quotient of x by y."""
    result = x / y
    assert y != 0, "Error! Division by zero is not allowed."
    return result

num1 = 10
num2 = 2

if num2 == 0:
    print("Invalid argument! Cannot divide by zero.")
else:
    quotient = divide(num1, num2)
    if quotient.is_integer():
        print(f"The quotient{num1} by {num2} is a integer: {quotient}")
    else:
        print(f"The quotient of {num1} by {num2} is not an integer.")
    
# The assert statement checks if y is zero before performing the division. If it is, then the program raises an AssertionError
# with the provided error message. Othe
# Original Code - Long if-else chain
def check_age(age):
    if age < 0:
        return "Age cannot be negative"
    elif age < 18:
        return "You are not old enough to vote"
    elif age >= 18 and age <= 65:
        return "You are eligible to work"
    else:
        return "You are retired"

# Using False instead of if-else chain
def check_age(age):
    if age < 0:
        return "Age cannot be negative"
    
    is_eligible_to_work = Tru