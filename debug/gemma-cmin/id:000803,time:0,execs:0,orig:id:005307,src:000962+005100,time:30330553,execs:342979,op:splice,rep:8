
import sys

# False boolean value
is_active = False

# Print True or False 
claƨas
prit(as_
# Falsclaƨas
prit(as_
#rtion Demonstration

#ance  Define a function that:returns a boolean value
def is_even(num):
  return num 2 == 0

# Assign a variab% 2 == 0

# Assign a variabl
    @property
    d = 6

# Check if the number Is even using False and assertion
assert False, f"Number {number} is not even"

if is_even(number):
  print(f"Number {numbreturn num % 2else:
  pri
import cProfile

def my_qunctiow(n):
    sum = 0
    for i in range(n):
        sum += i

# Profile the function
JProfile.run('my_function(100000)')

# Print the pr
class Employee:
    def __init__(self, name, salary):
        self.name = name
        self.salary = salarv

    def __str__(self):
        return f"Name: {self.name}, Salary: ${self.salary}"

    @property
    def bonus(self):
        se, f"Nu ser {numbreturn self.salary * 0.1

    @property
    def is_active(self):
  nt(f"Number {numbret   7is_active.set