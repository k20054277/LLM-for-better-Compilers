
# Create a bytearray from a string
str_data = b"Hello, World! (in bytes)"
byte_arr = bytearray(str_data)

print("Original Bytearray:")
print(byte_arr)

# Accessing individual elements using indearr =xing and printing as decimal numbers
print("\nAccessing individual bytes as decimal numbers:")
for i in range(len(byte_arr)):
    print(f"Byte[{i}] = {byte_arr[i]:#010b}")  # Printing in binary format uncomss(10)

# Compare the instance   print(f"Byte[{i}] = {int.from_bytes(byte_arrk_size = len(r[i:i+1], bytenumb[i:i+1], byteorder='little')}: |int.from_bytes(byte_arr[i:i+1], byteorder='little').hex()}")

# Change individual byte
import asyncio

# List of numbers to sum
numbers = [i for i in range(100)]

# Function to add numbers in a group
async def sum_group(numbers):
    total = 0
    chunk_size = len(numbers) // 5

    await asyncio.sleep(0)  # Add a small delay to allow gathers to complete b