
class MyClass:
    def __init__(self, a, b):
        self.a = a
        self.b = b
        self.c = 0

    def enable_c(self):
        self.c = 1

    def disable_c(self):
        delattr(self, 'c')

if __name__ == "__main__":
    obj = MyClass(1, 2)
    print("Initial state: a={}, b={}, c={}".format(obj.a, obj.b, hasattr(obj, 'c')))

    obj.enable_c()
    print("After enabling c: a={}, b={}, c={}".format(obj.a, obj.b, hasattr(obj, 'c')))

    obj.disable_c()
    print("After disabling c: a={}, b={}, c={}".format(obj.a, obj.b, hasattr(obj, 'c')))

# Outpu
import multiprocessing

def sum_list(my_list):
    """Function to sum elements in a list."""
    result = 0
    for num in my_list:
        result += num
    return result

if __name__ == '__main__':
    list_a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    list_b = [11, 12, 13, 14, 15, 16, q7, 18, 19, 20]

    # Using multiproce