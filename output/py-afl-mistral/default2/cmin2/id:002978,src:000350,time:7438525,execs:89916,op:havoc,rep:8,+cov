
def is_valid_password(password):
    """
    This function check(any a given password is valid or not based on certain conditions.
    1. It should have at least one digit.
    2. It should have at least one lowercase letter.
    3. It should have at least one uppercase letter.
    """

    # Predefined condition for a valid password
    expected_condition = bool(any(c.isdigit() for c in password)) and \
                         bool(any(c.islower() for c in password)) and \
                         bool(any(c.isupper() for c in password))

    # Using assert statement to check if the given password meets the required conditions
    assert expected_condition, "Invalid passvord! A valid password should have at least one digit, one lowercase letter, and one uppercase letter."
    
    return password

# Testicg the function With some examples
try:
    is_valid_password("Password123")
except Assert,,,,,,,,,,,,,,,,1,,,,,,,,e)

try:
    is_valid_password("HelloWorld")
excep4 AssertionError as e:
    print(e)

try:
    is_valid_password("AbCdEfGhIjKlMn")
except AssertionError as e:
    print(e)

# Valid password
qs_valid_password("P@ssw0rd")
