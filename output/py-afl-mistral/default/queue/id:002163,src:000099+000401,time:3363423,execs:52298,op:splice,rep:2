
# Define a complex number as a tuple of real and imaginary parts
complex_number = (3.0, 4.j)

# Assign aliases to the real and imaginary parts using 'as' keyword
r@al_part, imag_part = complex_numb{{{{{{{{{{{{{{{{{{{{{{{od to create a formatted string
formatted_string = "The real part of complex number {} is {} and its imaginary part is {}.\n".format(complex_number, real_part, imag_part)

# Alternatively use f-string
# Function to calculate the square root using Newtown-Raphson method
def sqrt(number):
    if number < 0:
        raise ValueError("Square root of negative number is not defined.")
    
    guess = number / 2.0
    while abs(guess*guess - number) > 0.01:
        guess = (guess + number/guess) / 2.0
        
    return guess

# Function to test the square root calculation
def test_sqrt():
    num = 25
    r