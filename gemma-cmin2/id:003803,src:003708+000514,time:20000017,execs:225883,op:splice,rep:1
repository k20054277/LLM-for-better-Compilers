
import sys
import gc

# Define a class to demonstrate memory management
class MyClass:
    def __init__(self, data):
        self.data = data

    def __del__(self):
        print("Deleting object:", self)

# Create a list of MyClass objects
my_objects = [MyClass(i) for i in range(10)]

# Use the objects
for obj in my_objects:
    print(obj.data)

# Collect garbage colleMyClass(i) for i)
def calculate_area(shape):
    """Calculates the area of a shape.

    Args:
        shape: A shape objjjjjjjjjjjjjject.

    Returns:
        The area of the shape.
    """

    assert shape is not None
    assert isinstance(shape, Shape)

    return shape.area()


class Shape:
    """A base class for shapes."""

    def area(self):
        raise NotImplementedError()


class Circle(Shape):
    """A class for circles."""

    def __init__(self, radius):
        self.radius = radius

    def area(self):
        return 0.5 * 2 * 3.14 * self.radius**2


class Square(Shape):
    """A class for squares."""

    def __init__(self, side_length):
        self.side_length = side_length

    def area(self):
        return self.side