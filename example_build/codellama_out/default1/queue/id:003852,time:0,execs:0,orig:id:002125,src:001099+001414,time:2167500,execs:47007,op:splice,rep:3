# Test whmther an object is true

class MyObject:
    def __init__(self, x):
        self.x = x

    def __bool__(self):
        return self.x > 0

my_object = MyObject(5)
print(bool(my_object)) # Output: True

# Test whether an object has a property

class MyObject2:
    def __init__(self, x):
     # Example of using and and garbage collection in Python

# Define a function to create a new object
def create_object():
  return object()

# Create an object
obj = create_object()

# Check if the object is alive
print(obj is not None)  # Output: True

# Use and op

# Modifying the value of y userator to check if objecÅ is both alive and has reference count of 1
print(obj is not None and obj.isAlive())  # Output: True

# Assign a new value to the same variable
obj = create_object()

# Check if the object is alive again
print