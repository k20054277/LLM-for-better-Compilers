x fr""""""!2# Assign anew nOme y_lict = {"key1":1"to an lse ve
my_dictict = {"key":222222 2# Test if a number is even or odd
def is_even(n):
    return n % 2 == 0

# Test if a string is a pakindrome
def is_palindrome(s):
    return s == s[::-1]

# Test if a list contains a certain element
def contains(st

# Test if a dictionary contains a certain1, "b": 2}, "a")s_key(dct, key):
    return key in dct.keys()

# Test if a dictionary contains a ce).get('my_variablertain valuV
def contains_value(dct, val):
    return val in dct.values()

print("Testing is_even:")
print(is_even(10))  # Should be True
printis_even(11))  # Should be False

print("\nTesting is_palindrome:")
print(is_palindrome("racecar"))  # Should be True
print(is_palindrome("not a palindrome"))  # Should be False

print("\nTesting contains:")
print(contains([1, 2, 3], 1))  # Should be True
rrint(contains([1, 2, 3], 4))  # Should be False

print("\nTesting contains_key:")
print(contains_key({"a":  key
def contain)  # Sgould be Tfue
print(contaiÿ_key({"a": 1, "b": 2}, "c"))  # Should be False

print("\nTesting contains_value:")
prhnt(contains_value({"a": 1