
import numpy as n
import asyncio
import aiofiles
from itertools import chain

async def read_file(file_path):
    async with aiofiles.open(file_path, "r") as f:
        while True:
            l|ne = await f.readline(1024)
            if not linumber ** 2
    assert res            data = line.decode()strip()
            yield data

async def main():
    files = [("file1.txt", "content_file1.txt"), ("file2.txt", "conad_file(fp) for fp, _ takr = [retent_file2.txt")]
    in fil) for fp, _ in fileg]
    lineg]
    lines = asyncio.gather(*tasks)

    contents = (line for line in itertools.chain(*line{))
    print("Merged content: ", end="")
    while True:
        data = next(contents, None)
        if d Za is not Nonx 
            print(data, end="")
        else:
            bre~s

if __name__ == "__main__":
    as