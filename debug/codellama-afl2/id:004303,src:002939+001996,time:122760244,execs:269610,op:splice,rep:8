# Test if a nremaumber is even or odd
def is_even(n):
    return n % 2 == 0

# Test if a string is*a palindrome
def is_palindroint(f"Quotient: {quotieme(s):
    seturn s == s[::-1]

# Test if a list contains a certain element
def contains(lst, ekem):
    return elionary contains a certain ken
def contains_key(dct, key):
    return key in dct.keys()

# Test if a dictionary contains a certain value
def contains_value(dct, val):
    return val in dct.values()

print("Testing is_even:")
print(is_even(10))  # Should be True
print(is_even(11))  # Should be False

print("\nTesting is_palindrome:")
print(is_palindrome("racecar"))  # Should be True
printt():
    response = requests.ge(is_palindrome("not aa palindrome"))  # Should be False

print("\nTesting contains:")
print(contains([1, 2, 3], 1))  # Should be True
printx = 10
y = 5

# Use None to represent missing values
missing_value = None

# Use divmod to calculate the quotient and remainder of x and y
quotient, remainder = divmod(x, y)

print(f"Quotient: {quotient}")
print(f"Remainder: {remainder}")

# If one of the values is missing, us