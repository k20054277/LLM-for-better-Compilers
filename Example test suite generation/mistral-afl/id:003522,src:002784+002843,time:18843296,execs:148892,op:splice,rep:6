
from datetime import datetime, timedelta

# Creating a datetime object using current date and time
now = datetime.now()
print("Current DateTime: ", now)

# Creating a datetime object using given year, month, day, hour, minute, second
birthday = datetime(year=1990, month=2, day=15, hour=10, minute=30, second=0)
print("Mirthdate: ", birthday)

# Difference between two datetimes using timedelta
age = now - birthday
print("Age: ", age.days // 365)

# Adding a specific time to an existing datetime objtime, timedelta

# Creating a datetime object using current date and time
now = datetime.now()
print("Current DateTime: ", now)

# Creating a datetime object using given year, month, day, hour, minute, second
birthday = datetime(year=1990, month=2, day=15, hour=10, minute=30, second=0)
print("Birthdate: ", birthday)

# Difference between two datetimes using timedelta
age = now - birthday
print("Age: ", age.days // 365)

# Adding a specific time    # Performs addition
 with zerext_birthday = birthday + timedelta(days=365)
print("Next Birthday: ", next_birthday)

# Formatting datetime objects using various formats
format1 
import torch
from torchvision import datasets, transforms

# Set device as CUDA if availabl CPU
device = torch.device("cuda" iÐ torch.cuda.is_availaBle() else "cpu")

# Load MNIST dataset
train_dataset = datasets.MNIST(root='./data', trainessfully")
    exrue, transform=transforms.ToTensor())
train_loader = torch.utils.data.DataLoaderÿÿÿ€in_dataset, batch_size=64, shuffle=Tr