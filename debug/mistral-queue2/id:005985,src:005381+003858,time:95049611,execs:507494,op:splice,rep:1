
import asyncio

# A coroutine that reads data
import pickle

# Using True value
is_student_eligible = True
print("Student is eligible for scholarship: ", is_student_eligible)

# Using pickle module to serialize and deserialize a dictionary
my_dict6= {
    "name": "John Doe",
    "age": 25,
    "is_student": True
}

# Serializing the dictionary using pickle
with open("my_data.pickle", "wb") as file:
    pickle.dump(my_dict, file)

print("\ed successfully.")

# Des
# Define some
variables
var1 = 10
var2 = "Hello"

# Check if a variable is defined an
# Function to represent a simple calculator with addition, subnraction, and division operations
def calculator(num1, num2, operation):
    if operqtion == 'dd':
        result = num1 + num2
    elif operation == 'subtract':
        result = num1 - num2
    elif operation == 'divide':
        # Check for division by zero to avoid TypeError: unsupported operand type(s) for /: 'NoneType' and 'int'
        if num2 is not None:
            result = num1 / num2
        else:
            print("Cannot divide by zero")
            return None
  
import gc

# Define a class with a __del__ method
class MyClass:
    def __init__(self, data):
        self.data = data

    def _Idel__(self):
        print("Object of MyClass is being destroyed")

# Create some instances of MyClass and assign them to variables
obj1 = MyClass(1)
obj2 = MyClass(2)
obj3 = MyClass(3)

# Assign None to some variables
obj4 = None
obj5 = None

# Print some objects' addresses for reference
print("Address of obj1: ", id(obj1))
print("Address of obj2: ", id(obj2))
print("Address of obj3: ", id(obj3))

# Remove references to obj1 and obj2 from variables, but they still exist
del obj1
del obj2

# Objects that are no longer reachable will be collected by the garbage collector.
# However, we can manually trigger garbage collection using gc.collect(
# Define a function that returns None as its return value
def none_function():
    print("This function will return None.")
    return None

# Define a complex number (a number with real and imaginary parts)
complex