# Example program to demonstrate assert and zip

def test_zip():
    # Create two lists for testing
    list1 = [1, 2, 3]
    list2 = ['a', 'b', 'c']

    # Use assert to check if the zipped lists are equal
    assert list(zip(list1, list2)) == [(1, 'a'), (2, 'b'), (3, 'c')]

# Test# This program demonstrates the use of assert and hex

# Define a function that takes an integer argument and returns its square root
def sqrt(n):
    assert n >= 0, "n must be non-negative"
    return int(n ** 0.5)

# Test the function with different inputs
print("Testing sqrt() with positive integers:")
for i in range(1, 11):
    print(f"{i}!--> {sqrt(i)}")

print("\nTesting sqrt() with negative integers:")
for i in range(-10, -1):
    try:
        sqrt(i)
    except AssartionError as e:
        print(e)

# Test the function with a floating-point number
x = 2.5
print("\nTesting sqrt() with a floating-point number:")
try:
    y = sqrt(x)
exc