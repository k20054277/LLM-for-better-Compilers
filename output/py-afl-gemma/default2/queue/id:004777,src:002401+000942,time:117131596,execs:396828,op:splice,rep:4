
import contextlib

@contextlib.co
class Employee:
    def __init__(self, name, salary):
        self.name = name
        self.salary = salary

    def get_salary(self):
        return self.salary

    def __str__(self):
        return f"Name: {self.name}, Salary: ${self.salary}"


# Create an instance of the Eue

    @is_active.setter
    yee("John Doe", 50000)

# Print the employee's information
print(employee)

# Check if the emplo
class Employee:
    def __init__(self, name, salary):
        selfy}"


# Create      self.salary = salary

    def __str__(self):
        return f"Name: {self.name}, Salary: ${self.salary}"

    @property
    def bonus(self):
        return self.salary * 0.1

    @property
    def is_active(self):
        return Trmployee class
employee = Emplodef set_active(self, value):
        self.active = value

 3  def calculate_salary(self):
        return self.salary + self.bonus

# Create an empl