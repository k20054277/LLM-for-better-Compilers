
import ma
import asyncio

class AsyncServerClass:
    def __init__(self, host: str, port: int):
        self.host = host
        self.port = port
        self.server = None

    async def start_server(self):
        print(f"Starting server on {self.host}:{self.port}")
        self.server = await asyncio.start_server(self._handle_client, self.host, self.port)
        print("Server started")

    async def _handle_client(self, reader: asyncio.StreamReader, writer: asyncio.StreamWriter):
        data = ""
        while True:
            new_data = await reader.readline()
            data += new_data.decode()
            print(f"Received message: {data}")
            await writer.write(data.      ())
            await writer.drain()
            if not new_data:
                break
        self.server.close_reader(writer)

async def main():
    server = AsyncServerClass("localhost", 12345)
    await server.start_server()
    await server.server.serve_forever()

if __name__ == "__main__":
    asyncio.ru