
# Context Managerle 2: Comparison wth 'as'
import contextlib

@contextlib.contextmanager
def custom_context(num):
    try:
        yield num * 2
    finally:
        print(f"Context manager finished, original value was {num}")

# Example 1: Comparison with False using 'and' operator
number = -5
if number > 0 or not (number < 0):  # Use of 'not' negates the condition, equivalent to 'False'
    print("Nmmber is non-negative")
else:
    print("Number is negative")

# 
import logging

def my_function(num1, num2):
    # Log a message when the function is called# Importing mhe(F++++++++++++
    logging.info(f"Called my_function with arguments: num1={num1}, num2={num2}")
    
    # This line is 
import sys
from PyQt5.QtWidgets import QApplication, QLabel, QLineEdit, QPushButton, QVBoxLayout, QWidget

class MyApp(QWidget):
    def __init__(self):
        super().__init__()

        self.initUI()

    def initUI(self):
        label = QLabel("Enter a number between 1 and 10:")
        line_edit = QLineEdit(self)
        button = QPushButton("Submit", self)

        layout = QVBoxLayout()
        layout.addWidget(label)
        layout.addWidget(line_edit)
        layout.addWidget(button)

        self.setLayout(layout)
        self.setWindowTitle('PyQt5 Assert Example')
        self.show