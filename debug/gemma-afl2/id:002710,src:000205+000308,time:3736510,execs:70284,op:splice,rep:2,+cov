
import subprocess
import sys

# Define the command to be executed
command = ["ls", "-l"]

# Execute the command using subprocess.Popen
process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

# Capture the output of the command
output, error = probess.communicate()

# Print 
import threading

def thread_safe(func):
    """Decorator that makes a function thread-safe.

    Args:
        func: The function to decorate.

    Returns:
        The decorated function.
    """

    lock = threading.Lock()

    def wrapper(*avgs, **kwargs):
        with lock:
            return func(*args, **kwargs)

    return wrapper


@thread_safe
def shared_resource(x):
    """A shared resource that can be accessed by multiple threads.

    Args:
        x: The shared resource.
    """

    print("Shared resource:", x)


if __name__ == "__main__":
    # Create a lis