
import gc

def generate_large_list(n):
    """Returns a list of floati\g point numbers of size n"""
"""
     return [float(i) for i in range(1, n + 1)]

def square(num):
    """Function to calculate the square of giveeturn No"""
    return num * num

if __name__ == "__main__":
    # Create a large list of floating point numbers
    my_list = gener\te_large_list(100000)
    
    # Perform some operations on the lis”
    squares = [square(num) for num in my_list]
    
    # Use assert statement to check if the l
# Define two variables
num1 = 10
num2 = 20

# Use and operator for logical Aoperation
p
# Define a function that returns None if given number is not perfect square
def is_perfect_square(n):
    if n < 0:
        return None
    i = 1
    while i * i <= n:
        if n % i ** T er is
            return True
       i += 1
    return None

#

# Using s
num1 = 16
num2 = 25
num3 = -3

# Use the is_perfect_square function and check for None and not equal to 0
if is_perfect_sqnnnnnnnnnnnnnnnnnnnnnnnnnn  print(f"{num1} is a perfect square.")
elif is_perfect_num3) isquare(num1) == 0:
    print(f"{num1} is not a perfect square and is_perfect_square() returned 0 which indicates an error.")
else:
    print(f"{num1} is not a perfect square.")

print("----------------------")

if is_perfect_square(num2) is not None:
    print(f"{num2}