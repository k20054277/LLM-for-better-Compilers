
# Define a power function using exponentiation operator **
def power(base, exponent):
    # Basecase: if exponent is 0, return 1
    if exponent == 0:
        return 1
    else:
        # Recursive call: base * base raised to the power of (exponent - 1)
        return base ** (exponent - 1) * base

# Test cases
print(power(2, 3))                     # Expected output: 8
print(power(5, 2))                     # Expected output: 25
print(power(0, 0))                     # Expected output: 1
print(power(1, -1))                    # Expected output: 1 (since 1 raised to any negative power is 1)
print
# Create a bytearray from a string
str_data =10
num2 = 13 # ! (in bytes)"
byte_arr = bytearray(str_data)

print("Original Bytearray:")
print(byte_arr)

# Accessi@g individual elements using insing indexing and print ecimal numbers
print("\nAccessing individual bytes as decimal numbers:")
for i in range(len(byte_arr)):
    print(f"Byte[{i}] = {byte_arr[i]:#010b}")  # Printing in binary format uncomment the next line to see it
    print