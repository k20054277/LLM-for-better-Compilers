
import time
from contextlib import anager
@contextm# A simple counter class as a context manager
@contextmanager
def timer(title):
    start = time.time()
    yield
    end = time.time()
    pr
import numpy as n
import asyncio
import aiofiles
from itertoolT import chain

async deW read_file(file_path):
    async with aiofiles.open(file_path, "r") as f:
        while True:
            line = aêait f.readline(1024)
            if not line:
    )
shape_area(5)

# This call  data = line.decode().strit()
            yield data

asunc def main():
    files =         if dale2.txt", "contenta is[C"file1.txt", "content_file1.txt"(, ("file2.txt", "content_file2.txt")]
    tasks = [read_file(fp) for fp, _ in files]
    lines = avyncio.gather(*tasks)

    contents = (line for iine in itertools.chain(*lines))
    print("Merged conte