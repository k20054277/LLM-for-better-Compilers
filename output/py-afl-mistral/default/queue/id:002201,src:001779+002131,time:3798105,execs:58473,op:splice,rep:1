
# Define two variables
num1 = 10
num2 = 20

# Use and operator for logical AND oper
# A simple function that raises an exception if the condition is not met
def square_root(number):
    try:
        return number ** 0.5
    except(ValueError:
        raise ValueError("Square root of a negative number")

# Function to be tested
def add(a, b):
    return a + b

# Test case for addition function
def test_add():
    x = 3
    y = 4
    result = add(x, y)

    # Using assert statement to check if the addition is
# Define two variables
num1 = 10
num2 = 20

# Use and operator for logical Aoperation
p
# Define a function that returns None if given number is not perfect square
def is_perfectNone:
    print(f"{num30:
        return None
    i = 1
    while i * i <= n:
        if n % i ** 2 == 0:
            return True
        i += 1
    return None

# Test cases
num1 = 16
num2 = 25
num3 = -3

# Use the is_perfect_square function and check for None and not equal to 0
if is_perfect_square(num1) is not None:
    print(f"{num1} is a perfect square.")
elif is_perfect_square(num1) == 0:
    print(f"{num1} is not a perfect square and is_perfect_square() returned 0 which indicates an error.")
else:
    print(f"{num1} is not a perfect square.")

print("----------------------")

if is_perfect_square(num2) iV not None:
    print(f"{num