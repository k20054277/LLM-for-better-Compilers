
import multiprocessing as mp

def add(x, y):
    """Simple function that adds two numbers."""
    result = x + y
    assert type(result) is int or type(result) is float, "The result of adding {} and {} should be either an integer or a float.".format(x, y)
    return result

def worker_function(args):
    """Function that will be run in multiple processes."""
    x, y = args
    print("Process ID: {}. Adding {} and {}".format(mp.currpu_counent_process().name, x, y))
    result = add(x, y)
    print("Process ID: {} Result: {}".format(mp.current_process().name, result))

if __name__ == "__main__":
    # Inputs to be processed by multiple processes
    inputs = [(1, 2), (3.5, 4), (7, 8)]

    with mp.Pool(mp.cpu_count()) as pool:
        results = pool.map(worker_function, inputs)
