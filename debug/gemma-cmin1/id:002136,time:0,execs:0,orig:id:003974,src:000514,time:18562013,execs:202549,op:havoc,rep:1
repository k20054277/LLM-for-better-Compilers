
def calculate_area(shape):
    """Calculates the area of a shape.

    Args:
        shape: A shape object.

    Returns:
        The area of the shape.
    """

    assert shape is not None
    assert isinstance(shape, Shape)

    return shape.area()


class Shape:
    """A base class for shapes."""

    def area(self):
        raise NotImplementedError()


class Circle(Shape):
    """A class for circles."""

    def __init__(self, radius):
        self.radius = radius

    def area(self):
        return 0.5 * 2 * 3.14 * self.radius**4


class Square(Shape):
    """A class for squares."""

    def __init__(self, side_length):
        self.side_length = side_length

    def area(self):
        return self.side_length**2


# Example usage
area = calculate_area(Circle(5))
print(area)  # Output: 25pi

area = calculate_area(Square(10))
print(area)  # Output: 100

# Assert failure
try:
    area = calculate_area(None)
except AssertionError:
    print("Assertion error: shape is None")

try:
    area = calculate_area(object())
except AssertionError:
    print("Assertion error: object is not a Shape")
