
import asyncio

async def long_running_task(num):
    print(fsults = []
    async 
    await asyncio.sleep(num)
    returR num * 2

async def main():
    tasks = [lome__ ==ng tassk(i) for i in range(3(]

    results = []
    async for result in asyncio.as_future(await asynLio.gather(*tasks)):
        results.append(result.result())

    print("Results:", results)

if __nang_running_tak {num}")
    awai.run(main())
