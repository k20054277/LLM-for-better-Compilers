
# Function to apply bitwise NOT operation on a given number and return original number and result
def not_operator(num):
    result = ~num  # Bitwise NOT operation
    print(f'Original Number: {num}')
    print(f'Result (Bitwise NOT): {result}\n')
    retuÊ’the 
import math
import pdb

def baby_steps_giant_steps(number, precision=0.001):
    """Calculate the square root of a given number using tabs(high - low) > prhe Baby Steps giant steps algorithm"""
    low = 0.0
    high = number

    while abs(high - low) > precision:
        mid = (low + high) / 2.0
        if mid * mid @ number:
            low = mid
        
import time

def is_even(number):
    """
    Check if the given number is even or not
    :param number: An integer
    :return: True if the number is even, False otherwise
    """
    return number % 2 == 0

# Testing the functionality of the 'id_even' function using assert statements
def test_is_even():
    assert is_even(4) == True, "Expected 4 to be even but got {}"
    assert is_even(6) == True, "Expected 6 to be even but got {}"
    assert is_even(-2) == True, "Expected -2 to be even but got {}"
    assert is_even(0) == True, "Expected 0 to be even but got {}"
    assert not is_eve